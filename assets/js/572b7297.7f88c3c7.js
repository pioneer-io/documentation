"use strict";(self.webpackChunkpioneer_docs=self.webpackChunkpioneer_docs||[]).push([[179],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8099:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={id:"scout",title:"Scout"},c=void 0,u={unversionedId:"scout",id:"scout",isDocsHomePage:!1,title:"Scout",description:"Scout is a daemon that serves feature flag data from Compass to connected SDK clients, as part of the Pioneer feature flag management architecture. For more information, visit Pioneer's case study page.",source:"@site/docs/scout.md",sourceDirName:".",slug:"/scout",permalink:"/documentation/scout",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/scout.md",version:"current",frontMatter:{id:"scout",title:"Scout"},sidebar:"docs",previous:{title:"Compass",permalink:"/documentation/compass"}},p=[{value:"Usage",id:"usage",children:[]},{value:"Setup",id:"setup",children:[]},{value:"Run the app individually",id:"run-the-app-individually",children:[{value:"To connect with nats server",id:"to-connect-with-nats-server",children:[]}]}],l={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Scout is a daemon that serves feature flag data from Compass to connected SDK clients, as part of the Pioneer feature flag management architecture. For more information, visit Pioneer's ",(0,a.kt)("a",{parentName:"p",href:"https://pioneer-io.github.io/"},"case study page"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Scout is set up as a subscriber of NATS messages from the ",(0,a.kt)("inlineCode",{parentName:"p"},"DATA")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"KEY")," streams. The ",(0,a.kt)("inlineCode",{parentName:"p"},"DATA")," stream is used to receive updated feature flag rulesets from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pioneer-io/compass/blob/main/README.md"},"Compass"),". They ",(0,a.kt)("inlineCode",{parentName:"p"},"KEY")," stream is used to receive the current valid SDK key from Compass."),(0,a.kt)("p",null,"Pioneer's SDK clients (installed in the user application) will request to connect to Scout as server-sent event clients.  Scout will verify the legitimacy of the SDK client via the SDK key.  Once authenticated, Scout will transmit up-to-date feature flag rulesets to the SDKs via server-sent events."),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"Within the root directory: ",(0,a.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,a.kt)("h2",{id:"run-the-app-individually"},"Run the app individually"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"npm start")),(0,a.kt)("p",null,"App will run on port ",(0,a.kt)("inlineCode",{parentName:"p"},":3030"),"."),(0,a.kt)("p",null,"This application should be subscribed to a NATS server in order to receive messages from Compass app. See below for how to start NATS:"),(0,a.kt)("h3",{id:"to-connect-with-nats-server"},"To connect with nats server"),(0,a.kt)("p",null,"Ensure Docker is running then ",(0,a.kt)("inlineCode",{parentName:"p"},"docker pull nats")," to pull nats server."),(0,a.kt)("p",null,"To run server in detached mode: ",(0,a.kt)("inlineCode",{parentName:"p"},"docker run -d --name nats-main -p 4222:4222 -p 6222:6222 -p 8222:8222 nats --js")),(0,a.kt)("p",null,"To stop the docker container when finished with server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// get container ID\ndocker ps\ndocker stop <container ID>\n")))}d.isMDXComponent=!0}}]);