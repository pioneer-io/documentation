"use strict";(self.webpackChunkpioneer_docs=self.webpackChunkpioneer_docs||[]).push([[131],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(t),f=i,m=u["".concat(s,".").concat(f)]||u[f]||c[f]||a;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7128:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],l={id:"compass",title:"Compass"},s=void 0,d={unversionedId:"compass",id:"compass",isDocsHomePage:!1,title:"Compass",description:"Compass is an integral component of Pioneer feature flag management.  Compass consists of a user interface built on React, and a Node.js backend. For more information, visit Pioneer's case study page.",source:"@site/docs/compass.md",sourceDirName:".",slug:"/compass",permalink:"/documentation/compass",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/compass.md",version:"current",frontMatter:{id:"compass",title:"Compass"},sidebar:"docs",previous:{title:"Description",permalink:"/documentation/doc-description"},next:{title:"Scout",permalink:"/documentation/scout"}},p=[{value:"Run locally",id:"run-locally",children:[{value:"To connect with nats server",id:"to-connect-with-nats-server",children:[]}]},{value:"Connecting to DB",id:"connecting-to-db",children:[{value:"Server-side",id:"server-side",children:[]},{value:"API endpoints implemented server-side",id:"api-endpoints-implemented-server-side",children:[]},{value:"<code>GET /flags</code>",id:"get-flags",children:[]},{value:"<code>GET /flags/:id</code>",id:"get-flagsid",children:[]},{value:"<code>POST /flags</code>",id:"post-flags",children:[]},{value:"<code>PUT /flags/:id</code>",id:"put-flagsid",children:[]},{value:"<code>DELETE /flags/:id</code>",id:"delete-flagsid",children:[]},{value:"<code>GET / logs</code>",id:"get--logs",children:[]},{value:"Tests",id:"tests",children:[]}]}],c={toc:p};function u(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Compass is an integral component of Pioneer feature flag management.  Compass consists of a user interface built on React, and a Node.js backend. For more information, visit Pioneer's ",(0,a.kt)("a",{parentName:"p",href:"https://pioneer-io.github.io/"},"case study page"),"."),(0,a.kt)("h2",{id:"run-locally"},"Run locally"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"npm install")," in both the ",(0,a.kt)("inlineCode",{parentName:"p"},"client")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"server")," directories."),(0,a.kt)("p",null,"From server directory, ",(0,a.kt)("inlineCode",{parentName:"p"},"npm run dev"),"."),(0,a.kt)("p",null,"The front-end of the app is now available at localhost port ",(0,a.kt)("inlineCode",{parentName:"p"},"3000"),"."),(0,a.kt)("h3",{id:"to-connect-with-nats-server"},"To connect with nats server"),(0,a.kt)("p",null,"Ensure Docker is running then ",(0,a.kt)("inlineCode",{parentName:"p"},"docker pull nats")," to pull nats server."),(0,a.kt)("p",null,"To run server in detached mode: ",(0,a.kt)("inlineCode",{parentName:"p"},"docker run -d --name nats-main -p 4222:4222 -p 6222:6222 -p 8222:8222 nats --js")),(0,a.kt)("p",null,"Note that Pioneer uses Nats JetStream, hence the ",(0,a.kt)("inlineCode",{parentName:"p"},"--js")," flag above."),(0,a.kt)("p",null,"To stop the docker container when finished with server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// get container ID\ndocker ps\ndocker stop <container ID>\n")),(0,a.kt)("h2",{id:"connecting-to-db"},"Connecting to DB"),(0,a.kt)("p",null,"An instance of postgres needs to be run in a docker container on port ",(0,a.kt)("inlineCode",{parentName:"p"},"5432"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"init.sql")," files are within the ",(0,a.kt)("inlineCode",{parentName:"p"},"docker")," directory of this repository."),(0,a.kt)("h3",{id:"server-side"},"Server-side"),(0,a.kt)("h3",{id:"api-endpoints-implemented-server-side"},"API endpoints implemented server-side"),(0,a.kt)("h3",{id:"get-flags"},(0,a.kt)("inlineCode",{parentName:"h3"},"GET /flags")),(0,a.kt)("p",null,"Example response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "flags": [\n        {\n            "id": 1,\n            "title": "LOGIN_MICROSERVICE",\n            "description": "Redirects users to the login microservice",\n            "is_active": false,\n            "version": 1,\n            "rollout": 0,\n            "updated_at": "2021-07-12T18:02:12.439Z",\n            "created_at": "2021-07-12T18:02:12.439Z"\n        },\n        {\n            "id": 34,\n            "title": "this is a testing flag!",\n            "description": "log this event, app!",\n            "is_active": false,\n            "version": 1,\n            "rollout": 60,\n            "updated_at": "+053499-03-12T04:49:28.999Z",\n            "created_at": "2021-07-12T18:02:32.081Z"\n        }\n    ]\n}\n')),(0,a.kt)("h3",{id:"get-flagsid"},(0,a.kt)("inlineCode",{parentName:"h3"},"GET /flags/:id")),(0,a.kt)("p",null,"Returns an object containing the flag object as well as an array of events associated with that flag."),(0,a.kt)("p",null,"Example response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "flag": {\n        "id": 1,\n        "title": "LOGIN_MICROSERVICE",\n        "description": "Redirects users to the login microservice",\n        "is_active": false,\n        "version": 1,\n        "rollout": 0,\n        "updated_at": "2021-07-18T16:18:42.369Z",\n        "created_at": "2021-07-18T16:18:42.369Z"\n    },\n    "eventLog": [\n        {\n            "id": 1,\n            "flag_id": 1,\n            "title": "LOGIN_MICROSERVICE",\n            "description": "Created new flag: LOGIN_MICROSERVICE",\n            "created_at": "2021-07-18T16:18:42.379Z"\n        }\n    ]\n}\n')),(0,a.kt)("h3",{id:"post-flags"},(0,a.kt)("inlineCode",{parentName:"h3"},"POST /flags")),(0,a.kt)("p",null,"Successfully creating a flag with ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," will also create a new event log entry. Note that the title is the only required field. All flags are initially created in an 'off' toggle state."),(0,a.kt)("p",null,"Example request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "flag": {\n        "title": "testing_flag",\n        "rollout": 5,\n        "description": "testing out flag creation"\n    }\n}\n')),(0,a.kt)("p",null,"Example response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "flag": {\n        "id": 37,\n        "title": "testing_flag",\n        "description": "testing out flag creation",\n        "is_active": false,\n        "version": 1,\n        "rollout": 5,\n        "updated_at": "2021-07-19T16:42:28.483Z",\n        "created_at": "2021-07-19T16:42:28.483Z"\n    }\n}\n')),(0,a.kt)("h3",{id:"put-flagsid"},(0,a.kt)("inlineCode",{parentName:"h3"},"PUT /flags/:id")),(0,a.kt)("p",null,"Successfully updating a flag with ",(0,a.kt)("inlineCode",{parentName:"p"},"PUT")," will create a new entry in the event log."),(0,a.kt)("p",null,"Example request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "flag": {\n        "title": "new title",\n        "is_active": false,\n        "rollout": 55,\n        "description": "adding a more descriptive text here.."\n    }\n}\n')),(0,a.kt)("p",null,"Example response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "flag": {\n        "id": 34,\n        "title": "new title",\n        "description": "adding a more descriptive text here..",\n        "is_active": false,\n        "version": 1,\n        "rollout": 55,\n        "updated_at": "+053499-06-18T05:00:09.999Z",\n        "created_at": "2021-07-12T18:02:32.081Z"\n    }\n}\n')),(0,a.kt)("h3",{id:"delete-flagsid"},(0,a.kt)("inlineCode",{parentName:"h3"},"DELETE /flags/:id")),(0,a.kt)("p",null,"When a flag is deleted, a new event log item will be generated."),(0,a.kt)("p",null,"Example response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "id": "35"\n}\n')),(0,a.kt)("h3",{id:"get--logs"},(0,a.kt)("inlineCode",{parentName:"h3"},"GET / logs")),(0,a.kt)("p",null,"Returns an array of event logs related to all flags."),(0,a.kt)("p",null,"Example response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[\n    {\n        "id": 1,\n        "title": "this is a testing flag!",\n        "flag_id": 34,\n        "description": "Flag created.",\n        "created_at": "2021-07-12T18:02:32.098Z"\n    },\n    {\n        "id": 2,\n        "title": "this is a testing flag!",\n        "flag_id": 34,\n        "description": "Updated flag: \'this is a testing flag!\'",\n        "created_at": "2021-07-12T20:17:48.772Z"\n    },\n]\n')),(0,a.kt)("h3",{id:"tests"},"Tests"),(0,a.kt)("p",null,"To run tests, run ",(0,a.kt)("inlineCode",{parentName:"p"},"npm test")," from the ",(0,a.kt)("inlineCode",{parentName:"p"},"/server")," directory."))}u.isMDXComponent=!0}}]);